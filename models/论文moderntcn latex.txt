\section{时序分类模型介绍}

\subsection{模型总体框架}
在本章节中，提出了结合第三章的自适应多尺度分解时序表征算法的结构纯卷积时序分类模型，其总体提框架如图\ref{4 分类模型总体框架}所示。该模型主要有三个结构，分别为：深度可分离卷积、通道分组逐点卷积、变量分组逐点卷积。
模块是为了实现时序分类任务而提出的，所提出方法具有以下优点：
其一，解耦式三维建模：通过深度可分离卷积分离时间、通道、变量维度的特征提取，时间维度采用大核卷积捕获长程依赖，通道和变量维度分别通过线性与非线性组合增强特征表达能力。
其二，轻量高效架构：纯卷积的结构提供了高效的计算效率，通道变量分离子网络通过分组点卷积实现通道维度的动态特征融合，减少参数冗余。
其三，多尺度协同优化：融合第三章多尺度的时序表征算法，浅层聚焦局部细节，深层通过大尺度卷积建模全局周期模式。
\begin{figure}[htpb]
    \centering
    \includegraphics[width=0.95\linewidth]{picture/4_1 Overall Framework.png}
    \caption{解耦纯卷积时序分类模型总体框架}
    \label{4 分类模型总体框架}
\end{figure}
所提出完整模型如图\ref{4 分类模型总体框架}所示，输入的原始数据先经过第三章提出的时序表征算法完成数据的建模，接着通过多层的解耦纯卷积模型块（蓝色区域）实现分类任务。
多个解耦纯卷积模型块串行链接，可以通过超参数$num\_blocks$来设置层数，每一个解耦纯卷积块由残差链接成的，多层结构能深度探索时序潜在特征，残差链接保证了原有特征不被丢失。
解耦卷积模型首先通过深度可分离卷积，针对时间维度，采用大卷积、小卷积核的双路混合卷积核提取融合全局、局部特征。
接着，通过通道变量分离子网络层（绿色整体区域），依次通过通道分组逐点卷积 和 变量分组逐点卷积，采用分组点卷积分别捕获通道内的特征，学习变量间的特征，并且在其中加入dropout层防止过拟合。
这样模型通过时间、通道、卷积解耦独立地捕获特征，提高了算法的准确性和效率。
在接下来的部分，将详细的介绍三个关键模块。

\subsection{深度可分离卷积层}

为了针对时间维度上的特征，深度可分离卷积层通过解耦出时间特征特征，双路卷积构建了专注于时序建模的特征学习机制，模块的整体流程图如图\ref{深度可分离卷积层}所示。
\begin{figure}[htpb]
    \centering
    \includegraphics[width=0.75\linewidth]{picture/4_ 深度可分离卷积.png}
    \caption{深度可分离卷积层}
    \label{深度可分离卷积层}
\end{figure}

深度可分离卷积层作为解耦纯卷积模型的首个模块，输入的是第三章式子\ref{结果处理}中的输出${\hat{Y}}$，
为了清晰表示，本章将这个给定输入张量表示为$X \in \mathbb{R}^{M \times C \times N}$（其中$M$为变量数，$C$为通道维度，$N$为时间步数），该层采用双路可分离卷积策略，该层的计算过程可形式化为：
\begin{equation}
Y_{(m,\ d,\ :)} = \text{DWConv}(X_{(m,\ d,\ :)}, \mathbf{W}_L, \mathbf{W}_S)) 
% ,\forall m \in [1,M], d \in [1,C]
\label{深度可分离卷积层}
\end{equation}
其中$\text{DWConv}(\cdot)$表示深度可分离卷积（Depthwise Separable Convolution）操作，$\mathbf{W}_L$为时间维大卷积核参数，$\mathbf{W}_S$为时间维小卷积核参数。
为了解耦出时间维度，模块被设计为变量$M$和通道$C$无关的操作，固定变量$M$和通道$C$对时间步数$N$进行操作在这表示为$X_{(m,\ d,\ :)}$，同理仅仅处理时间维度后的模块输出，表示为$Y_{(m,\ d,\ :)}$。
为实现全局时序模式捕获与局部特征提取的协同优化，本文提出双路混合卷积架构，具体来说：

1. 大卷积核路径：本文采用大尺度膨胀卷积核$\mathbf{W}_L \in \mathbb{R}^{B}$，通过扩大感受野捕获长程依赖，改善卷积网络在捕获长期时序中的局限：
\begin{equation}
Y_L = \mathbf{W}_L \ast X_{(m,\ d,\ :)}
\end{equation}

2. 小卷积核路径：引入小尺度卷积核$\mathbf{W}_S \in \mathbb{R}^S$与批量归一化层(BN)构建辅助训练分支：
\begin{equation}
Y_S = \text{BN}(\mathbf{W}_S \ast X_{(m,\ d,\ :)})
\end{equation}
其中，为保证提取到全局和局部特征，超参数$\mathbb{W}^{B}>>\mathbb{W}^{S}$。

3. 训练阶段采用融合增强策略，其前向过程可形式化为：
\begin{equation}
Y_{(m,\ d,\ :)} = Y_L + Y_S
\end{equation}

\subsection{变量通道分离子网络}
为了不杂合变量维度和通道维度的信息，
本模块解耦得通过两个串行的分组逐点卷积层，分别建模跨特征与跨变量的依赖关系，
最终通过残差连接保证原始数据不被过多的丢失，实现多维度的信息融合，其整体处理流程如图\ref{通道变量分离子网络}所示。
\begin{figure}[htpb]
    \centering
    \includegraphics[width=0.98\linewidth]{picture/4_ 通道变量分离子网络.png}
    \caption{通道变量分离子网络}
    \label{通道变量分离子网络}
\end{figure}

整个子网络接收来自深度可分离卷积层的输出特征
$Y_{DWConv} = Y_{(m,\ d,\ :)} \in \mathbb{R}^{M \times C \times N}$
（其中，$M$为变量数，$C$为特征维度，$N$为时序长度），
变量分组逐点卷积（Grouped Pointwise Convolution over Variables, GPConv\_V）与 通过通道分组逐点卷积（Grouped Pointwise Convolution over Channels, GPConv\_C）的串行计算实现专注解耦得信息提取，计算的整体过程数学形式化为：
\begin{equation}
X_{\text{out}} = X + \underbrace{\text{GPConv\_D}(\underbrace{\text{GPConv\_V}(X_{DWConv})}_{\text{变量维度交互}})}_{\text{通道维度交互}}
\end{equation}
其中，前一个模块——深度可分离卷积层的输出$Y_{(m,\ d,\ :)}$在此式子中表示为$X_{DWConv}$。
$GPConv\_V$和$GPConv\_C$分别表示数据所经过的变量维度逐点卷积层 和 通道维度逐点卷积层，
最后采用了残差连接，融合整个解耦纯卷积分类模型的输入数据，即式子\ref{深度可分离卷积层}中的输入$X$。
具体来说包含以下核心组件：

\textbf{1. 变量分组逐点卷积}：通过设置分组数\(g=M\)（分组数$g$等于变量数$M$）的卷积核，来实现变量维度独立，对每个变量的不同通道特征处理，而不受其他变量的干扰，其计算流程为：
\begin{equation}
\begin{aligned}
Z^{(1)} &= \text{Dropout}\left( \mathbf{W}_{C2} \ast \text{GELU}\left( \mathbf{W}_{C1} \ast X_{DWConv} \right), \ p=0.1 \right)
\end{aligned}
\end{equation}
其中，深度可分离卷积网络模块的输出 \(X_{DWConv}\) 直接作为输入，送入此变量分组逐点卷积模块。
具体而言，首先利用权重矩阵 \(\mathbf{W}_{C1}\) 对输入 \(X_{DWConv}\) 进行升维得逐点卷积操作，此时每个通道的卷积核仅作用于对应的输入通道，实现跨变量的通道间独立处理。
随后，通过 GELU 激活函数引入非线性变换，进一步增强模型的表达能力。
接着，再与权重矩阵 \(\mathbf{W}_{C2}\) 进行降维得分组逐点卷积，同样采用了变量维度分组，进一步提取特征并进行通道间的交互。
最后，应用 Dropout 操作， Dropout 的概率设置为 0.1，以此来实现对特征的随机失活，防止过拟合。
整个过程通过分组逐点卷积网络有效处理输入特征，实现变量的独立性并提取更丰富的特征信息。

\textbf{2. 通道分组逐点卷积}：通过设置分组数\(g=C\)（分组数$g$等于通道数$C$）的卷积核保持通道独立性，以此达到通道维度独立的目的。
这个卷积过程通过将通道分成多个组，每组独立进行卷积操作，从而在通道维度上实现独立的特征提取，不杂糅单个通道内部特征，确保不同通道的信息不会相互干扰。
变量分组逐点卷积的计算流程如下：
\begin{equation}
\begin{aligned}
Z^{(2)} &= \text{Dropout}\left( \mathbf{W}_{\text{V2}} \ast \text{GELU}\left( \mathbf{W}_{\text{V1}} \ast Z^{(1)} \right), \ p=0.1 \right)
\end{aligned}
\end{equation}
其中， \(Z^{(1)}\) 是变量分组逐点卷积的输出，用作通道分组逐点卷积的输入。
卷积核 \(\mathbf{W}_{\text{V1}}\) 首先对输入 \(Z^{(1)}\) 进行升维逐点卷积，每个卷积核仅作用于对应特征组，实现通道特征的跨变量处理。
随后，通过GELU 激活函数引入非线性特性，增强模型的表达能力。
接着，卷积核 \(\mathbf{W}_{\text{V2}}\) 再对 GELU 激活后的特征图进行降维得分组逐点卷积，进一步提取特征并实现在特征维度上的交互。
最后，与之前处理方式一致，应用 Dropout 操作，以 0.1 的概率随机丢弃特征，防止过拟合。
整体上，变量分组逐点卷积网络有效处理输入特征，保持特征独立性，提取更丰富的特征信息。

\textbf{3. 倒瓶颈结构卷积}：  
本研究采用倒瓶颈结构（Inverted Bottleneck）构建特征抽象模块。
为了优化特征表达效率，本模块的两组分组逐点卷积采用倒瓶颈结构，
具体来说这是一种“扩展-变换-压缩”的维度调控策略。
升维阶段，将输入维度扩展至 $ffn\_ratio$倍（超参数，默认为2），在高维空间增强特征可分性，
并且在高维空间中特征的表示更加丰富，特征的表达能力也得到了增强。
在降维阶段，通过第二组降维逐点卷积层，将特征压缩回原尺度，避免维度膨胀导致的过拟合风险。 